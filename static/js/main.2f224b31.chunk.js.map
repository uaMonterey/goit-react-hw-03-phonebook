{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","title","className","s","container","initialState","name","number","ContactForm","state","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","form__contact","this","label","htmlFor","input","onChange","type","pattern","required","button","Component","ContactList","contacts","onContactDelete","list","map","id","item","wrap","onClick","Filter","getFilter","filter","App","initialContacts","onFormContact","contact","uuidv4","some","toLowerCase","alert","prevState","onContactFilter","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","currentContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f224b31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__contact\":\"ContactForm_form__contact__1w0Bt\",\"label\":\"ContactForm_label__3QROp\",\"title\":\"ContactForm_title__1UdnD\",\"input\":\"ContactForm_input__1_qK_\",\"button\":\"ContactForm_button__EkWrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Zwxh\",\"item\":\"ContactList_item__3Z-2y\",\"name\":\"ContactList_name__2Vwpa\",\"wrap\":\"ContactList_wrap__3uXZJ\",\"button\":\"ContactList_button__2Jqg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1FGIK\",\"title\":\"Filter_title__1_ry7\",\"input\":\"Filter_input__2K5rZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3JstN\",\"title\":\"Container_title__2T6lm\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children, title }) => (\r\n  <div className={s.container}>\r\n    <h1 className={s.title}>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form__contact} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor=\"input name\">\r\n          <p className={s.title}>Name</p>\r\n          <input\r\n            className={s.input}\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label} htmlFor=\"input number\">\r\n          <p className={s.title}>Number</p>\r\n          <input\r\n            className={s.input}\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onContactDelete }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <div className={s.wrap}>\r\n            <span className={s.name}>\r\n              {name} : {number}\r\n            </span>\r\n            <button\r\n              className={s.button}\r\n              onClick={() => onContactDelete(id)}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onContactDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ getFilter, filter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      <p className={s.title}>Find contact by name</p>\r\n      <input\r\n        className={s.input}\r\n        onChange={getFilter}\r\n        value={filter}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  getFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport initialContacts from './data/contacts.json';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\n//components\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  static propTypes = {\n    initialContacts: PropTypes.array,\n  };\n\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  onFormContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const contact = {\n      name: name,\n      number: number,\n      id: uuidv4(),\n    };\n\n    contacts.some(\n      ({ name }) => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n      ? alert('go home')\n      : contacts.some(\n          ({ number }) => contact.number.toLowerCase() === number.toLowerCase(),\n        )\n      ? alert('go home suckers')\n      : this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n  suckers;\n\n  onContactDelete = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  getFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onContactFilter = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  render() {\n    const currentContacts = this.onContactFilter();\n    const { filter } = this.state;\n\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm onSubmit={this.onFormContact} />\n\n        {currentContacts.length > 0 && (\n          <Filter filter={filter} getFilter={this.getFilter} />\n        )}\n\n        {currentContacts.length > 0 && (\n          <ContactList\n            onContactDelete={this.onContactDelete}\n            contacts={currentContacts}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}